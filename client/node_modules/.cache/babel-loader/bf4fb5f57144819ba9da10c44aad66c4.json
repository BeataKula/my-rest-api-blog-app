{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/components/User.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserById } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        id: 0,\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        address: {},\n        phone: \"\",\n        website: \"\",\n        company: {}\n      },\n      isloaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUserById(this.props.userId);\n\n    if (this.props.userId === 7) {\n      console.log(\"User, componentDidMount, userId: \" + this.props.userId + \" , state.isloaded: \" + this.state.isloaded);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.userId === 7) {\n      console.log(\"User, componentDidUpdate START, props.userId: \" + this.props.userId);\n      console.log(\"User, componentDidUpdate START, state.userId: \" + this.state.user.id);\n      console.log(\"User, componentDidUpdate START, isLoading: \" + this.props.userReducer.userById.isLoading);\n      console.log(\"User, componentDidUpdate START, state.isloaded: \" + this.state.isloaded);\n    }\n\n    if (!this.props.userReducer.userById.error && !this.props.userReducer.userById.isLoading && this.props.userReducer.userById.data != null && //!this.state.isloaded\n    //TODO Czemu to nie działa????\n    !this.state.isloaded) {\n      const user = this.props.userReducer.userById.data.user;\n\n      if (this.props.userId !== this.state.user.id) {\n        this.setState({\n          user: {\n            id: user.id,\n            name: user.name,\n            username: user.username,\n            email: user.email,\n            address: {},\n            phone: user.phone,\n            website: user.website,\n            company: {}\n          }\n        });\n      } else {\n        this.setState({\n          isloaded: true\n        });\n      }\n\n      if (this.props.userId === 7) {\n        console.log(\"User, componentDidUpdate, IF, props.userId: \" + this.props.userId); //console.log(\"User, componentDidUpdate, IF,  userId: \" + user.id);\n\n        console.log(\"User, componentDidUpdate, IF, state.userId: \" + this.state.user.id);\n        console.log(\"User, componentDidUpdate, IF, isLoading: \" + this.props.userReducer.userById.isLoading);\n        console.log(\"User, componentDidUpdate, IF, state.isloaded: \" + this.state.isloaded);\n      }\n    } else {\n      var _this$props$userReduc;\n\n      if ((_this$props$userReduc = this.props.userReducer) !== null && _this$props$userReduc !== void 0 && _this$props$userReduc.error && !this.state.isloaded) {\n        this.setState({\n          isloaded: true\n        });\n      }\n    }\n\n    if (this.props.userId === 7) {\n      console.log(\"User, componentDidUpdate, END, props.userId: \" + this.props.userId); //console.log(\"User, componentDidUpdate, IF,  userId: \" + user.id);\n\n      console.log(\"User, componentDidUpdate, END, state.userId: \" + this.state.user.id);\n      console.log(\"User, componentDidUpdate, END, isLoading: \" + this.props.userReducer.userById.isLoading);\n      console.log(\"User, componentDidUpdate, END, state.isloaded: \" + this.state.isloaded);\n    }\n  }\n\n  render() {\n    if (this.state.user.id === 7) {\n      console.log(\"User, render state: \");\n      console.log(this.state);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserById\n})(User);","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/components/User.tsx"],"names":["React","connect","fetchUserById","User","Component","constructor","props","state","user","id","name","username","email","address","phone","website","company","isloaded","componentDidMount","userId","console","log","componentDidUpdate","userReducer","userById","isLoading","error","data","setState","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserById } from \"../actions\";\nimport { IUser, UserComponentType, UserState } from \"../AppTypes\";\n\nclass User extends React.Component<\n    UserComponentType,\n    { user: IUser; isloaded: boolean }\n> {\n    constructor(props: UserComponentType) {\n        super(props);\n    }\n\n    state = {\n        user: {\n            id: 0,\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            address: {},\n            phone: \"\",\n            website: \"\",\n            company: {},\n        },\n        isloaded: false,\n    };\n\n    componentDidMount() {\n        this.props.fetchUserById(this.props.userId);\n        if (this.props.userId === 7) {\n            console.log(\n                \"User, componentDidMount, userId: \" +\n                    this.props.userId +\n                    \" , state.isloaded: \" +\n                    this.state.isloaded\n            );\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.userId === 7) {\n            console.log(\n                \"User, componentDidUpdate START, props.userId: \" +\n                    this.props.userId\n            );\n            console.log(\n                \"User, componentDidUpdate START, state.userId: \" +\n                    this.state.user.id\n            );\n            console.log(\n                \"User, componentDidUpdate START, isLoading: \" +\n                    this.props.userReducer.userById.isLoading\n            );\n            console.log(\n                \"User, componentDidUpdate START, state.isloaded: \" +\n                    this.state.isloaded\n            );\n        }\n\n        if (\n            !this.props.userReducer.userById.error &&\n            !this.props.userReducer.userById.isLoading &&\n            this.props.userReducer.userById.data != null &&\n            //!this.state.isloaded\n            //TODO Czemu to nie działa????\n            !this.state.isloaded\n        ) {\n            const user = this.props.userReducer.userById.data.user;\n\n            if (this.props.userId !== this.state.user.id) {\n                this.setState({\n                    user: {\n                        id: user.id,\n                        name: user.name,\n                        username: user.username,\n                        email: user.email,\n                        address: {},\n                        phone: user.phone,\n                        website: user.website,\n                        company: {},\n                    },\n                });\n            } else {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n\n            if (this.props.userId === 7) {\n                console.log(\n                    \"User, componentDidUpdate, IF, props.userId: \" +\n                        this.props.userId\n                );\n                //console.log(\"User, componentDidUpdate, IF,  userId: \" + user.id);\n                console.log(\n                    \"User, componentDidUpdate, IF, state.userId: \" +\n                        this.state.user.id\n                );\n                console.log(\n                    \"User, componentDidUpdate, IF, isLoading: \" +\n                        this.props.userReducer.userById.isLoading\n                );\n                console.log(\n                    \"User, componentDidUpdate, IF, state.isloaded: \" +\n                        this.state.isloaded\n                );\n            }\n        } else {\n            if (this.props.userReducer?.error && !this.state.isloaded) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }\n\n        if (this.props.userId === 7) {\n            console.log(\n                \"User, componentDidUpdate, END, props.userId: \" +\n                    this.props.userId\n            );\n            //console.log(\"User, componentDidUpdate, IF,  userId: \" + user.id);\n            console.log(\n                \"User, componentDidUpdate, END, state.userId: \" +\n                    this.state.user.id\n            );\n            console.log(\n                \"User, componentDidUpdate, END, isLoading: \" +\n                    this.props.userReducer.userById.isLoading\n            );\n            console.log(\n                \"User, componentDidUpdate, END, state.isloaded: \" +\n                    this.state.isloaded\n            );\n        }\n    }\n\n    render() {\n        if (this.state.user.id === 7) {\n            console.log(\"User, render state: \");\n            console.log(this.state);\n        }\n\n        return (\n            <>\n                <span>{this.state.user.name}</span>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { userReducer: UserState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchUserById })(User);\n"]},"metadata":{},"sourceType":"module"}