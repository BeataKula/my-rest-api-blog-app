{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx\";\n\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPosts } from \"../actions\";\nimport Post from \"../components/Post\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n_c = PostsListStyle;\n\nclass PostsListPage extends React.Component {\n  /* state = {\n      isloaded: false,\n      isError: false,\n      headerMessageText: \"\",\n      messageText: \"\",\n      showMessage: false,\n      categoryMessage: \"info\" as categoryType,\n  };*/\n  componentDidMount() {\n    this.props.fetchPosts();\n    console.log(\"______________________ componentDIDMOUNT __________________________\");\n    console.log(this.props);\n    console.log(this.props.postsReducer);\n    console.log(\"______________________ isLoading __________________________\"); //console.log(this.props.postsReducer.isLoading);\n    //console.log(\"______________________ error __________________________\");\n    //console.log(this.props.postsReducer.error);\n  }\n\n  componentDidUpdate() {\n    console.log(\"______________________ componentDIDUPDATE __________________________\");\n    console.log(this.props.postsReducer);\n    console.log(\"______________________ isLoading __________________________\");\n    console.log(this.props.postsReducer.allList.isLoading);\n    console.log(\"______________________ error __________________________\");\n    console.log(this.props.postsReducer.allList.error); // console.log(this.props.postsReducer.allList);\n    // console.log(this.props.postsReducer.allList.error);\n\n    /*\n    if (\n        this.props.postsReducer.allList.error &&\n        !this.props.postsReducer.allList.isLoading\n    ) {\n        /*\n        this.setState({\n            isloaded: true,\n            isError: true,\n            headerMessageText: \"We're sorry we can't show you Blog!\",\n            messageText:\n                \"An error occurred while loading data: \" +\n                this.props.postsReducer.allList.data.text,\n            showMessage: true,\n            categoryMessage: \"negative\",\n        }); \n        \n    } else {\n        console.log(\n            \"IsLoading: \" + !this.props.postsReducer.allList.isLoading\n        );\n        if (\n            !this.props.postsReducer.allList.isLoading &&\n            this.props.postsReducer.allList.data.status\n        ) {\n            this.setState({\n                isloaded: true,\n            });\n        }\n    }\n    */\n  }\n\n  renderList() {\n    if (!this.props.postsReducer.allList.data) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    const ListOfPosts = this.props.postsReducer.allList.data.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, { ...post\n      }, post[\"id\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 24\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PostsListStyle, {\n        children: ListOfPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostsListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsListStyle\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx"],"names":["React","connect","styled","fetchPosts","Post","PostsListStyle","ul","PostsListPage","Component","componentDidMount","props","console","log","postsReducer","componentDidUpdate","allList","isLoading","error","renderList","data","ListOfPosts","posts","map","post","render","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAQA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAIA,OAAO,MAAMC,cAAc,GAAGH,MAAM,CAACI,EAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;KAAMD,c;;AAUb,MAAME,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA+D;AAC3D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEIC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWP,UAAX;AACAQ,IAAAA,OAAO,CAACC,GAAR,CACI,qEADJ;AAGAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,YAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CACI,6DADJ,EAPgB,CAUhB;AACA;AACA;AACH;;AAEDE,EAAAA,kBAAkB,GAAG;AACjBH,IAAAA,OAAO,CAACC,GAAR,CACI,sEADJ;AAGAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,YAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CACI,6DADJ;AAGAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,YAAX,CAAwBE,OAAxB,CAAgCC,SAA5C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,YAAX,CAAwBE,OAAxB,CAAgCE,KAA5C,EAViB,CAWjB;AACA;;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAI,CAAC,KAAKR,KAAL,CAAWG,YAAX,CAAwBE,OAAxB,CAAgCI,IAArC,EAA2C;AACvC,0BAAO,qCAAP;AACH;;AAED,UAAMC,WAAW,GAAG,KAAKV,KAAL,CAAWG,YAAX,CAAwBE,OAAxB,CAAgCI,IAAhC,CAAqCE,KAArC,CAA2CC,GAA3C,CACfC,IAAD,IAAiB;AACb,0BAAO,QAAC,IAAD,OAA2BA;AAA3B,SAAWA,IAAI,CAAC,IAAD,CAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHe,CAApB;AAMA,wBACI;AAAA,6BACI,QAAC,cAAD;AAAA,kBAAiBH;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBAAO,qCAAP;AAEA,wBACI;AAAA,6BAYI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBACK,KAAKN,UAAL;AADL;AAAA;AAAA;AAAA;AAAA;AAZJ,qBADJ;AAkBH;;AA/G0D;;AAkH/D,MAAMO,eAAe,GAAIC,KAAD,IAAwC;AAC5D,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAezB,OAAO,CAACwB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAyCI,aAAzC,CAAf","sourcesContent":["/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { fetchPosts } from \"../actions\";\nimport {\n    IPost,\n    PostsListPageType,\n    categoryType,\n    PostPayload,\n    PostState,\n} from \"../AppTypes\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n\nclass PostsListPage extends React.Component<PostsListPageType> {\n    /* state = {\n        isloaded: false,\n        isError: false,\n        headerMessageText: \"\",\n        messageText: \"\",\n        showMessage: false,\n        categoryMessage: \"info\" as categoryType,\n    };*/\n\n    componentDidMount() {\n        this.props.fetchPosts();\n        console.log(\n            \"______________________ componentDIDMOUNT __________________________\"\n        );\n        console.log(this.props);\n        console.log(this.props.postsReducer);\n        console.log(\n            \"______________________ isLoading __________________________\"\n        );\n        //console.log(this.props.postsReducer.isLoading);\n        //console.log(\"______________________ error __________________________\");\n        //console.log(this.props.postsReducer.error);\n    }\n\n    componentDidUpdate() {\n        console.log(\n            \"______________________ componentDIDUPDATE __________________________\"\n        );\n        console.log(this.props.postsReducer);\n        console.log(\n            \"______________________ isLoading __________________________\"\n        );\n        console.log(this.props.postsReducer.allList.isLoading);\n        console.log(\"______________________ error __________________________\");\n        console.log(this.props.postsReducer.allList.error);\n        // console.log(this.props.postsReducer.allList);\n        // console.log(this.props.postsReducer.allList.error);\n\n        /*\n        if (\n            this.props.postsReducer.allList.error &&\n            !this.props.postsReducer.allList.isLoading\n        ) {\n            /*\n            this.setState({\n                isloaded: true,\n                isError: true,\n                headerMessageText: \"We're sorry we can't show you Blog!\",\n                messageText:\n                    \"An error occurred while loading data: \" +\n                    this.props.postsReducer.allList.data.text,\n                showMessage: true,\n                categoryMessage: \"negative\",\n            }); \n            \n        } else {\n            console.log(\n                \"IsLoading: \" + !this.props.postsReducer.allList.isLoading\n            );\n            if (\n                !this.props.postsReducer.allList.isLoading &&\n                this.props.postsReducer.allList.data.status\n            ) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }\n        */\n    }\n\n    renderList() {\n        if (!this.props.postsReducer.allList.data) {\n            return <></>;\n        }\n\n        const ListOfPosts = this.props.postsReducer.allList.data.posts.map(\n            (post: IPost) => {\n                return <Post key={post[\"id\"]} {...post} />;\n            }\n        );\n\n        return (\n            <>\n                <PostsListStyle>{ListOfPosts}</PostsListStyle>\n            </>\n        );\n    }\n\n    render() {\n        return <></>;\n\n        return (\n            <>\n                {/*\n                <Loader isActive={!this.state.isloaded} />\n                <Message\n                        showMessage={this.state.showMessage}\n                        category={this.state.categoryMessage}\n                        headerText={this.state.headerMessageText}\n                        text={this.state.messageText}\n                        color=\"red\"\n                        size=\"large\"\n        />*/}\n\n                <div className=\"ui relaxed divided list\">\n                    {this.renderList()}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { postsReducer: PostState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsListPage);\n"]},"metadata":{},"sourceType":"module"}