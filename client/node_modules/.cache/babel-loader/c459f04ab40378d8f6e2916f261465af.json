{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx\";\n\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPosts } from \"../actions\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n_c = PostsListStyle;\n\nclass PostsListPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isloaded: false,\n      isError: false,\n      headerMessageText: \"\",\n      messageText: \"\",\n      showMessage: false,\n      categoryMessage: \"info\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.postsReducer);\n\n    if (this.props.postsReducer.error === true && !this.state.isloaded) {\n      this.setState({\n        isloaded: true,\n        isError: true,\n        headerMessageText: \"We're sorry we can't show you Blog!\",\n        messageText: \"An error occurred while loading data: \" + this.props.postsReducer.text,\n        showMessage: true,\n        categoryMessage: \"negative\"\n      });\n    } else {\n      if (this.props.postsReducer.status === 200 && !this.state.isloaded) {\n        this.setState({\n          isloaded: true\n        });\n      }\n    }\n  }\n\n  renderList() {\n    if (!this.props.postsReducer.posts) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    const ListOfPosts = this.props.postsReducer.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, { ...post\n      }, post[\"id\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PostsListStyle, {\n        children: ListOfPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        isActive: !this.state.isloaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        showMessage: this.state.showMessage,\n        category: this.state.categoryMessage,\n        headerText: this.state.headerMessageText,\n        text: this.state.messageText,\n        color: \"red\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostsListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsListStyle\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx"],"names":["React","connect","styled","fetchPosts","Post","Loader","Message","PostsListStyle","ul","PostsListPage","Component","state","isloaded","isError","headerMessageText","messageText","showMessage","categoryMessage","componentDidMount","props","componentDidUpdate","console","log","postsReducer","error","setState","text","status","renderList","posts","ListOfPosts","map","post","render","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { fetchPosts } from \"../actions\";\nimport { PostState, IPost, PostsListPageType, categoryType } from \"../AppTypes\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n\nclass PostsListPage extends React.Component<PostsListPageType> {\n    state = {\n        isloaded: false,\n        isError: false,\n        headerMessageText: \"\",\n        messageText: \"\",\n        showMessage: false,\n        categoryMessage: \"info\" as categoryType,\n    };\n\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    componentDidUpdate() {\n        console.log(this.props.postsReducer);\n\n        if (this.props.postsReducer.error === true && !this.state.isloaded) {\n            this.setState({\n                isloaded: true,\n                isError: true,\n                headerMessageText: \"We're sorry we can't show you Blog!\",\n                messageText:\n                    \"An error occurred while loading data: \" +\n                    this.props.postsReducer.text,\n                showMessage: true,\n                categoryMessage: \"negative\",\n            });\n        } else {\n            if (\n                this.props.postsReducer.status === 200 &&\n                !this.state.isloaded\n            ) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }\n    }\n\n    renderList() {\n        if (!this.props.postsReducer.posts) {\n            return <></>;\n        }\n\n        const ListOfPosts = this.props.postsReducer.posts.map((post: IPost) => {\n            return <Post key={post[\"id\"]} {...post} />;\n        });\n\n        return (\n            <>\n                <PostsListStyle>{ListOfPosts}</PostsListStyle>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <Loader isActive={!this.state.isloaded} />\n                <Message\n                    showMessage={this.state.showMessage}\n                    category={this.state.categoryMessage}\n                    headerText={this.state.headerMessageText}\n                    text={this.state.messageText}\n                    color=\"red\"\n                    size=\"large\"\n                />\n                <div className=\"ui relaxed divided list\">\n                    {this.renderList()}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { postsReducer: PostState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsListPage);\n"]},"metadata":{},"sourceType":"module"}