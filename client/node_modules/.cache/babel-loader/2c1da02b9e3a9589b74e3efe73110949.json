{"ast":null,"code":"import _ from \"lodash\";\nimport jsonPlaceholder, { getPosts, getUserById } from \"../apis/jsonPlaceholder\";\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts).map(\"userId\").uniq().forEach(id => dispatch(fetchUser(id))).value();\n};\nexport const fetchPosts = () => async dispatch => {\n  const response = await getPosts();\n  dispatch({\n    type: \"FETCH_POSTS\",\n    payload: response.data\n  });\n};\nexport const fetchUser = id => async dispatch => {\n  //const response = await jsonPlaceholder.get(`/users/${id}`);\n  const response = await getUserById(id);\n  dispatch({\n    type: \"FETCH_USER\",\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/actions/index.js"],"names":["_","jsonPlaceholder","getPosts","getUserById","fetchPostsAndUsers","dispatch","getState","fetchPosts","chain","posts","map","uniq","forEach","id","fetchUser","value","response","type","payload","data"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,IACIC,QADJ,EAEIC,WAFJ,QAGO,yBAHP;AAKA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAMD,QAAQ,CAACE,UAAU,EAAX,CAAd;;AAEAP,EAAAA,CAAC,CAACQ,KAAF,CAAQF,QAAQ,GAAGG,KAAnB,EACKC,GADL,CACS,QADT,EAEKC,IAFL,GAGKC,OAHL,CAGcC,EAAD,IAAQR,QAAQ,CAACS,SAAS,CAACD,EAAD,CAAV,CAH7B,EAIKE,KAJL;AAKH,CARM;AAUP,OAAO,MAAMR,UAAU,GAAG,MAAM,MAAOF,QAAP,IAAoB;AAChD,QAAMW,QAAQ,GAAG,MAAMd,QAAQ,EAA/B;AAEAG,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAzC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAML,SAAS,GAAID,EAAD,IAAQ,MAAOR,QAAP,IAAoB;AACjD;AACA,QAAMW,QAAQ,GAAG,MAAMb,WAAW,CAACU,EAAD,CAAlC;AAEAR,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAxC,GAAD,CAAR;AACH,CALM","sourcesContent":["import _ from \"lodash\";\nimport jsonPlaceholder, {\n    getPosts,\n    getUserById,\n} from \"../apis/jsonPlaceholder\";\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n    await dispatch(fetchPosts());\n\n    _.chain(getState().posts)\n        .map(\"userId\")\n        .uniq()\n        .forEach((id) => dispatch(fetchUser(id)))\n        .value();\n};\n\nexport const fetchPosts = () => async (dispatch) => {\n    const response = await getPosts();\n\n    dispatch({ type: \"FETCH_POSTS\", payload: response.data });\n};\n\nexport const fetchUser = (id) => async (dispatch) => {\n    //const response = await jsonPlaceholder.get(`/users/${id}`);\n    const response = await getUserById(id);\n\n    dispatch({ type: \"FETCH_USER\", payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}