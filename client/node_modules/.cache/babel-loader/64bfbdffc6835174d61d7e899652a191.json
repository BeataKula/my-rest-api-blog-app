{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/components/Message.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = _ref => {\n  _s();\n\n  let {\n    showMessage,\n    category,\n    headerText,\n    text,\n    color,\n    size\n  } = _ref;\n  const [visibility, setVisibility] = useState(\"hidden\");\n  const [messageClass, setMessageClass] = useState(\"\");\n  useEffect(() => {\n    const newVisibility = showMessage ? \" visible \" : \" hidden \";\n    setVisibility(newVisibility);\n    setMessageClass(`ui ${category} ${color} ${newVisibility} message`);\n  }, [showMessage, category, color]);\n\n  const onCloseIconClick = () => {\n    setVisibility(\"hidden\");\n    setMessageClass(`ui ${category} ${color} ${visibility} message`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: messageClass,\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"close icon\",\n      onClick: onCloseIconClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: headerText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Message, \"fe3aNtjDPX5T76o7KxbQ33VYnP8=\");\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/components/Message.tsx"],"names":["React","useState","useEffect","Message","showMessage","category","headerText","text","color","size","visibility","setVisibility","messageClass","setMessageClass","newVisibility","onCloseIconClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;;;AAaA,MAAMC,OAAoC,GAAG,QAOvC;AAAA;;AAAA,MAPwC;AAC1CC,IAAAA,WAD0C;AAE1CC,IAAAA,QAF0C;AAG1CC,IAAAA,UAH0C;AAI1CC,IAAAA,IAJ0C;AAK1CC,IAAAA,KAL0C;AAM1CC,IAAAA;AAN0C,GAOxC;AACF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,QAAD,CAA5C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,aAAa,GAAGV,WAAW,GAAG,WAAH,GAAiB,UAAlD;AACAO,IAAAA,aAAa,CAACG,aAAD,CAAb;AACAD,IAAAA,eAAe,CAAE,MAAKR,QAAS,IAAGG,KAAM,IAAGM,aAAc,UAA1C,CAAf;AACH,GAJQ,EAIN,CAACV,WAAD,EAAcC,QAAd,EAAwBG,KAAxB,CAJM,CAAT;;AAMA,QAAMO,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,aAAa,CAAC,QAAD,CAAb;AACAE,IAAAA,eAAe,CAAE,MAAKR,QAAS,IAAGG,KAAM,IAAGE,UAAW,UAAvC,CAAf;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEE,YAAhB;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,MAAA,OAAO,EAAEG;AAAnC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBT;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7BD;;GAAMJ,O;;KAAAA,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React, { ComponentType, useState, useEffect } from \"react\";\n\nexport type categoryType = \"info\" | \"positive\" | \"negative\" | \"warning\";\n\ntype MessageProps = {\n    showMessage: boolean;\n    category: categoryType;\n    headerText: String;\n    text: String;\n    color: String;\n    size: \"mini\" | \"tiny\" | \"small\" | \"large\" | \"big\" | \"huge\" | \"massive\";\n};\n\nconst Message: ComponentType<MessageProps> = ({\n    showMessage,\n    category,\n    headerText,\n    text,\n    color,\n    size,\n}) => {\n    const [visibility, setVisibility] = useState(\"hidden\");\n    const [messageClass, setMessageClass] = useState(\"\");\n\n    useEffect(() => {\n        const newVisibility = showMessage ? \" visible \" : \" hidden \";\n        setVisibility(newVisibility);\n        setMessageClass(`ui ${category} ${color} ${newVisibility} message`);\n    }, [showMessage, category, color]);\n\n    const onCloseIconClick = () => {\n        setVisibility(\"hidden\");\n        setMessageClass(`ui ${category} ${color} ${visibility} message`);\n    };\n\n    return (\n        <div className={messageClass}>\n            <i className=\"close icon\" onClick={onCloseIconClick} />\n            <div className=\"header\">{headerText}</div>\n            <p>{text}</p>\n        </div>\n    );\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}