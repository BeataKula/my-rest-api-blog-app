{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/pages/PostList.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPostsAndUsers } from \"../actions\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n_c = PostsListStyle;\n\nclass PostList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      isloaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPostsAndUsers();\n  }\n\n  componentDidUpdate() {\n    if (!this.props.postsReducer.allList.error && !this.props.postsReducer.allList.isLoading && this.props.postsReducer.allList.data != null && !this.state.isloaded) {\n      this.setState({\n        posts: this.props.postsReducer.allList.data,\n        isloaded: true\n      });\n    } else {\n      if (this.props.postsReducer.allList.error && !this.state.isloaded) {\n        this.setState({\n          isloaded: true\n        });\n      }\n    }\n  }\n\n  renderMessage() {\n    if (this.state.isloaded) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        showMessage: this.props.postsReducer.allList.data.showMessage,\n        category: this.props.postsReducer.allList.data.categoryMessage,\n        headerText: this.props.postsReducer.allList.data.headerMessageText,\n        text: this.props.postsReducer.allList.data.messageText,\n        color: \"red\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    if (this.state.posts === []) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    const ListOfPosts = this.state.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, { ...post\n      }, post[\"id\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PostsListStyle, {\n        children: ListOfPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        isActive: !this.state.isloaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        children: [this.renderMessage(), this.renderList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    postsReducer: state.postsReducer,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPostsAndUsers\n})(PostList);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsListStyle\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostList.tsx"],"names":["React","connect","styled","fetchPostsAndUsers","Post","Loader","Message","PostsListStyle","ul","PostList","Component","state","posts","isloaded","componentDidMount","props","componentDidUpdate","postsReducer","allList","error","isLoading","data","setState","renderMessage","showMessage","categoryMessage","headerMessageText","messageText","renderList","ListOfPosts","map","post","render","mapStateToProps","users"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPostsAndUsers } from \"../actions\";\nimport { IPost, PostsListPageType, PostState } from \"../AppTypes\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n\nclass PostList extends React.Component<PostsListPageType> {\n    state = {\n        posts: [],\n        isloaded: false,\n    };\n\n    componentDidMount() {\n        this.props.fetchPostsAndUsers();\n    }\n\n    componentDidUpdate() {\n        if (\n            !this.props.postsReducer.allList.error &&\n            !this.props.postsReducer.allList.isLoading &&\n            this.props.postsReducer.allList.data != null &&\n            !this.state.isloaded\n        ) {\n            this.setState({\n                posts: this.props.postsReducer.allList.data,\n                isloaded: true,\n            });\n        } else {\n            if (this.props.postsReducer.allList.error && !this.state.isloaded) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }\n    }\n\n    renderMessage() {\n        if (this.state.isloaded) {\n            return (\n                <Message\n                    showMessage={\n                        this.props.postsReducer.allList.data.showMessage\n                    }\n                    category={\n                        this.props.postsReducer.allList.data.categoryMessage\n                    }\n                    headerText={\n                        this.props.postsReducer.allList.data.headerMessageText\n                    }\n                    text={this.props.postsReducer.allList.data.messageText}\n                    color=\"red\"\n                    size=\"large\"\n                />\n            );\n        }\n    }\n\n    renderList() {\n        if (this.state.posts === []) {\n            return <></>;\n        }\n\n        const ListOfPosts = this.state.posts.map((post) => {\n            return <Post key={post[\"id\"]} {...post} />;\n        });\n\n        return (\n            <>\n                <PostsListStyle>{ListOfPosts}</PostsListStyle>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <Loader isActive={!this.state.isloaded} />\n                <div className=\"ui relaxed divided list\">\n                    {this.renderMessage()}\n                    {this.renderList()}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: {\n    postsReducer: PostState;\n    users: UserState;\n}) => {\n    return {\n        postsReducer: state.postsReducer,\n        users: state.users,\n    };\n};\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\n"]},"metadata":{},"sourceType":"module"}