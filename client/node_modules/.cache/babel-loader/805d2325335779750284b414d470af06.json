{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx\";\n\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPosts } from \"../actions\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n_c = PostsListStyle;\n\nclass PostsListPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      isloaded: false,\n      isError: false,\n      headerMessageText: \"\",\n      messageText: \"\",\n      showMessage: false,\n      categoryMessage: \"info\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n    /*\n    console.log(\"__________________ componentDIDMOUNT __________________\");\n    console.log(this.props.postsReducer.isLoading);\n    console.log(\"__________________ isLoading ______________________\");\n    console.log(this.props.postsReducer.isLoading);\n    console.log(\"______________________ error __________________________\");\n    console.log(this.props.postsReducer.error);\n    */\n  }\n\n  componentDidUpdate() {\n    /*\n    console.log(\"________________ componentDIDUPDATE _________________\");\n    console.log(this.props.postsReducer);\n    console.log(\"______________________ error __________________________\");\n    console.log(this.props.postsReducer.allList.error);\n    console.log(\"__________________ isLoading _____________________\");\n    console.log(this.props.postsReducer.allList.isLoading);\n    console.log(\"__________________ isLoaded ________________________\");\n    console.log(this.state.isloaded);\n    */\n    if (!this.props.postsReducer.allList.error && !this.props.postsReducer.allList.isLoading && this.props.postsReducer.allList.data != null && !this.state.isloaded) {\n      this.setState({\n        posts: this.props.postsReducer.allList.data.posts,\n        isloaded: true\n      });\n    } else {\n      if (this.props.postsReducer.allList.error) {\n        this.setState({\n          isloaded: true,\n          isError: true,\n          headerMessageText: \"We're sorry we can't show you posts!\",\n          messageText: \"An error occurred while loading data: \" + this.props.postsReducer.allList.data.text,\n          showMessage: true,\n          categoryMessage: \"negative\"\n        });\n      }\n    }\n  }\n\n  renderList() {\n    if (this.state.posts === []) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    const ListOfPosts = this.state.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, { ...post\n      }, post[\"id\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PostsListStyle, {\n        children: ListOfPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        isActive: !this.state.isloaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostsListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsListStyle\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx"],"names":["React","connect","styled","fetchPosts","Post","Loader","PostsListStyle","ul","PostsListPage","Component","state","posts","isloaded","isError","headerMessageText","messageText","showMessage","categoryMessage","componentDidMount","props","componentDidUpdate","postsReducer","allList","error","isLoading","data","setState","text","renderList","ListOfPosts","map","post","render","mapStateToProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAQA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,OAAO,MAAMC,cAAc,GAAGJ,MAAM,CAACK,EAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;KAAMD,c;;AAUb,MAAME,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA+D;AAAA;AAAA;AAAA,SAC3DC,KAD2D,GACnD;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE,KAFN;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,iBAAiB,EAAE,EAJf;AAKJC,MAAAA,WAAW,EAAE,EALT;AAMJC,MAAAA,WAAW,EAAE,KANT;AAOJC,MAAAA,eAAe,EAAE;AAPb,KADmD;AAAA;;AAW3DC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWhB,UAAX;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;AAEDiB,EAAAA,kBAAkB,GAAG;AACjB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQ,QACI,CAAC,KAAKD,KAAL,CAAWE,YAAX,CAAwBC,OAAxB,CAAgCC,KAAjC,IACA,CAAC,KAAKJ,KAAL,CAAWE,YAAX,CAAwBC,OAAxB,CAAgCE,SADjC,IAEA,KAAKL,KAAL,CAAWE,YAAX,CAAwBC,OAAxB,CAAgCG,IAAhC,IAAwC,IAFxC,IAGA,CAAC,KAAKf,KAAL,CAAWE,QAJhB,EAKE;AACE,WAAKc,QAAL,CAAc;AACVf,QAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,YAAX,CAAwBC,OAAxB,CAAgCG,IAAhC,CAAqCd,KADlC;AAEVC,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KAVD,MAUO;AACH,UAAI,KAAKO,KAAL,CAAWE,YAAX,CAAwBC,OAAxB,CAAgCC,KAApC,EAA2C;AACvC,aAAKG,QAAL,CAAc;AACVd,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,OAAO,EAAE,IAFC;AAGVC,UAAAA,iBAAiB,EAAE,sCAHT;AAIVC,UAAAA,WAAW,EACP,2CACA,KAAKI,KAAL,CAAWE,YAAX,CAAwBC,OAAxB,CAAgCG,IAAhC,CAAqCE,IAN/B;AAOVX,UAAAA,WAAW,EAAE,IAPH;AAQVC,UAAAA,eAAe,EAAE;AARP,SAAd;AAUH;AACJ;AACJ;;AAEDW,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKlB,KAAL,CAAWC,KAAX,KAAqB,EAAzB,EAA6B;AACzB,0BAAO,qCAAP;AACH;;AAED,UAAMkB,WAAW,GAAG,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAsBC,IAAD,IAAiB;AACtD,0BAAO,QAAC,IAAD,OAA2BA;AAA3B,SAAWA,IAAI,CAAC,IAAD,CAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFmB,CAApB;AAIA,wBACI;AAAA,6BACI,QAAC,cAAD;AAAA,kBAAiBF;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAWI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAAC,KAAKtB,KAAL,CAAWE;AAA9B;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBACK,KAAKgB,UAAL;AADL;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,oBADJ;AAkBH;;AAhG0D;;AAmG/D,MAAMK,eAAe,GAAIvB,KAAD,IAAwC;AAC5D,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAACgC,eAAD,EAAkB;AAAE9B,EAAAA;AAAF,CAAlB,CAAP,CAAyCK,aAAzC,CAAf","sourcesContent":["/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { fetchPosts } from \"../actions\";\nimport {\n    IPost,\n    PostsListPageType,\n    categoryType,\n    PostPayload,\n    PostState,\n} from \"../AppTypes\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n\nclass PostsListPage extends React.Component<PostsListPageType> {\n    state = {\n        posts: [],\n        isloaded: false,\n        isError: false,\n        headerMessageText: \"\",\n        messageText: \"\",\n        showMessage: false,\n        categoryMessage: \"info\" as categoryType,\n    };\n\n    componentDidMount() {\n        this.props.fetchPosts();\n        /*\n        console.log(\"__________________ componentDIDMOUNT __________________\");\n        console.log(this.props.postsReducer.isLoading);\n        console.log(\"__________________ isLoading ______________________\");\n        console.log(this.props.postsReducer.isLoading);\n        console.log(\"______________________ error __________________________\");\n        console.log(this.props.postsReducer.error);\n        */\n    }\n\n    componentDidUpdate() {\n        /*\n        console.log(\"________________ componentDIDUPDATE _________________\");\n        console.log(this.props.postsReducer);\n        console.log(\"______________________ error __________________________\");\n        console.log(this.props.postsReducer.allList.error);\n        console.log(\"__________________ isLoading _____________________\");\n        console.log(this.props.postsReducer.allList.isLoading);\n        console.log(\"__________________ isLoaded ________________________\");\n        console.log(this.state.isloaded);\n        */\n\n        if (\n            !this.props.postsReducer.allList.error &&\n            !this.props.postsReducer.allList.isLoading &&\n            this.props.postsReducer.allList.data != null &&\n            !this.state.isloaded\n        ) {\n            this.setState({\n                posts: this.props.postsReducer.allList.data.posts,\n                isloaded: true,\n            });\n        } else {\n            if (this.props.postsReducer.allList.error) {\n                this.setState({\n                    isloaded: true,\n                    isError: true,\n                    headerMessageText: \"We're sorry we can't show you posts!\",\n                    messageText:\n                        \"An error occurred while loading data: \" +\n                        this.props.postsReducer.allList.data.text,\n                    showMessage: true,\n                    categoryMessage: \"negative\",\n                });\n            }\n        }\n    }\n\n    renderList() {\n        if (this.state.posts === []) {\n            return <></>;\n        }\n\n        const ListOfPosts = this.state.posts.map((post: IPost) => {\n            return <Post key={post[\"id\"]} {...post} />;\n        });\n\n        return (\n            <>\n                <PostsListStyle>{ListOfPosts}</PostsListStyle>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                {/*\n        \n                <Message\n                        showMessage={this.state.showMessage}\n                        category={this.state.categoryMessage}\n                        headerText={this.state.headerMessageText}\n                        text={this.state.messageText}\n                        color=\"red\"\n                        size=\"large\"\n        />*/}\n                <Loader isActive={!this.state.isloaded} />\n                <div className=\"ui relaxed divided list\">\n                    {this.renderList()}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { postsReducer: PostState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsListPage);\n"]},"metadata":{},"sourceType":"module"}