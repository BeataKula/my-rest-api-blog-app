{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/components/User.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserById } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        id: this.props.userId,\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        address: {},\n        phone: \"\",\n        website: \"\",\n        company: {}\n      },\n      isloaded: false\n    };\n  }\n\n  componentDidMount() {\n    //console.log(\"componentDidMount\");\n    //console.log(\"____________________ fetchUserById _______________\");\n    //console.log(this.props.userId);\n    this.props.fetchUserById(this.props.userId); //console.log(\"____________________ fetchUserById END _______________\");\n    //console.log(\"props\");\n    //console.log(this.props);\n    //console.log(\"state\");\n    //console.log(this.state);\n  }\n\n  componentDidUpdate() {\n    if (!this.props.userReducer.userById.error && !this.props.userReducer.userById.isLoading && this.props.userReducer.userById.data != null && !this.state.isloaded) {\n      const user = this.props.userReducer.userById.data.user;\n      this.setState({\n        user: {\n          id: user.id,\n          name: user.name,\n          username: user.username,\n          email: user.email,\n          address: {},\n          phone: user.phone,\n          website: user.website,\n          company: {}\n        },\n        isloaded: true\n      });\n    } else {\n      var _this$props$userReduc;\n\n      if ((_this$props$userReduc = this.props.userReducer) !== null && _this$props$userReduc !== void 0 && _this$props$userReduc.error && !this.state.isloaded) {\n        this.setState({\n          isloaded: true\n        });\n      }\n    }\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"User name: \", this.state.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserById\n})(User);","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/components/User.tsx"],"names":["React","connect","fetchUserById","User","Component","constructor","props","state","user","id","userId","name","username","email","address","phone","website","company","isloaded","componentDidMount","componentDidUpdate","userReducer","userById","error","isLoading","data","setState","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,YAA9B;;;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAGE;AACEC,EAAAA,WAAW,CAACC,KAAD,EAA2B;AAClC,UAAMA,KAAN;AADkC,SAItCC,KAJsC,GAI9B;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,MADb;AAEFC,QAAAA,IAAI,EAAE,EAFJ;AAGFC,QAAAA,QAAQ,EAAE,EAHR;AAIFC,QAAAA,KAAK,EAAE,EAJL;AAKFC,QAAAA,OAAO,EAAE,EALP;AAMFC,QAAAA,KAAK,EAAE,EANL;AAOFC,QAAAA,OAAO,EAAE,EAPP;AAQFC,QAAAA,OAAO,EAAE;AARP,OADF;AAWJC,MAAAA,QAAQ,EAAE;AAXN,KAJ8B;AAErC;;AAgBDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA,SAAKb,KAAL,CAAWJ,aAAX,CAAyB,KAAKI,KAAL,CAAWI,MAApC,EAJgB,CAKhB;AACA;AACA;AACA;AACA;AACH;;AAEDU,EAAAA,kBAAkB,GAAG;AACjB,QACI,CAAC,KAAKd,KAAL,CAAWe,WAAX,CAAuBC,QAAvB,CAAgCC,KAAjC,IACA,CAAC,KAAKjB,KAAL,CAAWe,WAAX,CAAuBC,QAAvB,CAAgCE,SADjC,IAEA,KAAKlB,KAAL,CAAWe,WAAX,CAAuBC,QAAvB,CAAgCG,IAAhC,IAAwC,IAFxC,IAGA,CAAC,KAAKlB,KAAL,CAAWW,QAJhB,EAKE;AACE,YAAMV,IAAI,GAAG,KAAKF,KAAL,CAAWe,WAAX,CAAuBC,QAAvB,CAAgCG,IAAhC,CAAqCjB,IAAlD;AAEA,WAAKkB,QAAL,CAAc;AACVlB,QAAAA,IAAI,EAAE;AACFC,UAAAA,EAAE,EAAED,IAAI,CAACC,EADP;AAEFE,UAAAA,IAAI,EAAEH,IAAI,CAACG,IAFT;AAGFC,UAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHb;AAIFC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAJV;AAKFC,UAAAA,OAAO,EAAE,EALP;AAMFC,UAAAA,KAAK,EAAEP,IAAI,CAACO,KANV;AAOFC,UAAAA,OAAO,EAAER,IAAI,CAACQ,OAPZ;AAQFC,UAAAA,OAAO,EAAE;AARP,SADI;AAWVC,QAAAA,QAAQ,EAAE;AAXA,OAAd;AAaH,KArBD,MAqBO;AAAA;;AACH,UAAI,8BAAKZ,KAAL,CAAWe,WAAX,wEAAwBE,KAAxB,IAAiC,CAAC,KAAKhB,KAAL,CAAWW,QAAjD,EAA2D;AACvD,aAAKQ,QAAL,CAAc;AACVR,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH;AACJ;AACJ;;AAEDS,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,6BACI;AAAA,kCAAkB,KAAKpB,KAAL,CAAWC,IAAX,CAAgBG,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AArEH;;AAwEF,MAAMiB,eAAe,GAAIrB,KAAD,IAAuC;AAC3D,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,IAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserById } from \"../actions\";\nimport { IUser, UserComponentType, UserState } from \"../AppTypes\";\n\nclass User extends React.Component<\n    UserComponentType,\n    { user: IUser; isloaded: boolean }\n> {\n    constructor(props: UserComponentType) {\n        super(props);\n    }\n\n    state = {\n        user: {\n            id: this.props.userId,\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            address: {},\n            phone: \"\",\n            website: \"\",\n            company: {},\n        },\n        isloaded: false,\n    };\n\n    componentDidMount() {\n        //console.log(\"componentDidMount\");\n        //console.log(\"____________________ fetchUserById _______________\");\n        //console.log(this.props.userId);\n        this.props.fetchUserById(this.props.userId);\n        //console.log(\"____________________ fetchUserById END _______________\");\n        //console.log(\"props\");\n        //console.log(this.props);\n        //console.log(\"state\");\n        //console.log(this.state);\n    }\n\n    componentDidUpdate() {\n        if (\n            !this.props.userReducer.userById.error &&\n            !this.props.userReducer.userById.isLoading &&\n            this.props.userReducer.userById.data != null &&\n            !this.state.isloaded\n        ) {\n            const user = this.props.userReducer.userById.data.user;\n\n            this.setState({\n                user: {\n                    id: user.id,\n                    name: user.name,\n                    username: user.username,\n                    email: user.email,\n                    address: {},\n                    phone: user.phone,\n                    website: user.website,\n                    company: {},\n                },\n                isloaded: true,\n            });\n        } else {\n            if (this.props.userReducer?.error && !this.state.isloaded) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }\n    }\n\n    render() {\n        //console.log(this.props);\n        return (\n            <>\n                <span>User name: {this.state.user.name}</span>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { userReducer: UserState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchUserById })(User);\n"]},"metadata":{},"sourceType":"module"}