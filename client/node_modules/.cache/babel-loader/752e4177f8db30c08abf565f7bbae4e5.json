{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/components/User.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserById } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        id: this.props.userId,\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        address: {},\n        phone: \"\",\n        website: \"\",\n        company: {}\n      },\n      isloaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetchUserById(this.props.userId);\n  }\n\n  componentDidUpdate() {\n    if (!this.state.isloaded) {\n      var _this$props$userReduc;\n\n      this.setState({\n        posts: (_this$props$userReduc = this.props.userReducer) === null || _this$props$userReduc === void 0 ? void 0 : _this$props$userReduc.userById,\n        isloaded: true\n      });\n    } else {\n      var _this$props$userReduc2;\n\n      if ((_this$props$userReduc2 = this.props.userReducer) !== null && _this$props$userReduc2 !== void 0 && _this$props$userReduc2.error && !this.state.isloaded) {\n        this.setState({\n          isloaded: true\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"User Name: \", this.state.user.userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserById\n})(User);","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/components/User.tsx"],"names":["React","connect","fetchUserById","User","Component","constructor","props","state","user","id","userId","name","username","email","address","phone","website","company","isloaded","componentDidMount","componentDidUpdate","setState","posts","userReducer","userById","error","render","console","log","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,YAA9B;;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAGE;AACEC,EAAAA,WAAW,CAACC,KAAD,EAA2B;AAClC,UAAMA,KAAN;AADkC,SAItCC,KAJsC,GAI9B;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,MADb;AAEFC,QAAAA,IAAI,EAAE,EAFJ;AAGFC,QAAAA,QAAQ,EAAE,EAHR;AAIFC,QAAAA,KAAK,EAAE,EAJL;AAKFC,QAAAA,OAAO,EAAE,EALP;AAMFC,QAAAA,KAAK,EAAE,EANL;AAOFC,QAAAA,OAAO,EAAE,EAPP;AAQFC,QAAAA,OAAO,EAAE;AARP,OADF;AAWJC,MAAAA,QAAQ,EAAE;AAXN,KAJ8B;AAErC;;AAgBDC,EAAAA,iBAAiB,GAAG;AAChBjB,IAAAA,aAAa,CAAC,KAAKI,KAAL,CAAWI,MAAZ,CAAb;AACH;;AAEDU,EAAAA,kBAAkB,GAAG;AACjB,QAAI,CAAC,KAAKb,KAAL,CAAWW,QAAhB,EAA0B;AAAA;;AACtB,WAAKG,QAAL,CAAc;AACVC,QAAAA,KAAK,2BAAE,KAAKhB,KAAL,CAAWiB,WAAb,0DAAE,sBAAwBC,QADrB;AAEVN,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KALD,MAKO;AAAA;;AACH,UAAI,+BAAKZ,KAAL,CAAWiB,WAAX,0EAAwBE,KAAxB,IAAiC,CAAC,KAAKlB,KAAL,CAAWW,QAAjD,EAA2D;AACvD,aAAKG,QAAL,CAAc;AACVH,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH;AACJ;AACJ;;AAEDQ,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB;AACA,wBAAO;AAAA,gCAAkB,KAAKC,KAAL,CAAWC,IAAX,CAAgBE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAzCH;;AA4CF,MAAMmB,eAAe,GAAItB,KAAD,IAAuC;AAC3D,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAAC4B,eAAD,EAAkB;AAAE3B,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,IAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserById } from \"../actions\";\nimport { IUser, UserComponentType, UserState } from \"../AppTypes\";\n\nclass User extends React.Component<\n    UserComponentType,\n    { user: IUser; isloaded: boolean }\n> {\n    constructor(props: UserComponentType) {\n        super(props);\n    }\n\n    state = {\n        user: {\n            id: this.props.userId,\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            address: {},\n            phone: \"\",\n            website: \"\",\n            company: {},\n        },\n        isloaded: false,\n    };\n\n    componentDidMount() {\n        fetchUserById(this.props.userId);\n    }\n\n    componentDidUpdate() {\n        if (!this.state.isloaded) {\n            this.setState({\n                posts: this.props.userReducer?.userById,\n                isloaded: true,\n            });\n        } else {\n            if (this.props.userReducer?.error && !this.state.isloaded) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }\n    }\n\n    render() {\n        console.log(this.props);\n        return <span>User Name: {this.state.user.userId}</span>;\n    }\n}\n\nconst mapStateToProps = (state: { userReducer: UserState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchUserById })(User);\n"]},"metadata":{},"sourceType":"module"}