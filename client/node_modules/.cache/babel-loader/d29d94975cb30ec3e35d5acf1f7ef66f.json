{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/App.tsx\";\nimport React, { Component } from \"react\";\nimport Post from \"./components/Post\";\nimport Loader from \"./components/Loader\";\nimport LeftPanel from \"./components/LeftPanel\";\nimport Message from \"./components/Message\";\nimport { Wrapper, Title } from \"./components/AppStyles\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      isloaded: false,\n      isError: false,\n      headerMessageText: \"\",\n      messageText: \"\",\n      showMessage: false,\n      categoryMessage: \"info\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        this.setState({\n          posts: [],\n          isloaded: false,\n          isError: true,\n          headerMessageText: \"We're sorry we can't show you Blog!\",\n          messageText: \"An error occurred while loading data: <br/>\" + response.text,\n          showMessage: true,\n          categoryMessage: \"negative\"\n        });\n        return [];\n      }\n    }).then(json => {\n      this.setState({\n        posts: json,\n        isloaded: true\n      });\n    });\n  }\n\n  render() {\n    const postsList = this.state.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, { ...post\n      }, post[\"id\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Blog Beaty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(LeftPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Loader, {\n            isActive: !this.state.isloaded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            showMessage: this.state.showMessage,\n            category: this.state.categoryMessage,\n            headerText: this.state.headerMessageText,\n            text: this.state.messageText,\n            color: \"red\",\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"post-list\",\n            children: postsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/App.tsx"],"names":["React","Component","Post","Loader","LeftPanel","Message","Wrapper","Title","App","state","posts","isloaded","isError","headerMessageText","messageText","showMessage","categoryMessage","componentDidMount","fetch","then","response","status","json","setState","text","render","postsList","map","post"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Post from \"./components/Post\";\nimport Loader from \"./components/Loader\";\nimport LeftPanel from \"./components/LeftPanel\";\nimport Message, { categoryType } from \"./components/Message\";\n\nimport { Wrapper, Title } from \"./components/AppStyles\";\n\nimport \"./App.css\";\n\nexport type PostType = {\n    userId: number;\n    id: number;\n    title: string;\n    body: string;\n};\n\ntype appStateType = {\n    posts: PostType[];\n    isloaded: boolean;\n    isError: boolean;\n    headerMessageText: String;\n    messageText: String;\n    showMessage: boolean;\n    categoryMessage: categoryType;\n};\n\nclass App extends Component<{}, appStateType> {\n    state = {\n        posts: [],\n        isloaded: false,\n        isError: false,\n        headerMessageText: \"\",\n        messageText: \"\",\n        showMessage: false,\n        categoryMessage: \"info\" as categoryType,\n    };\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\n            .then((response) => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    this.setState({\n                        posts: [],\n                        isloaded: false,\n                        isError: true,\n                        headerMessageText:\n                            \"We're sorry we can't show you Blog!\",\n                        messageText:\n                            \"An error occurred while loading data: <br/>\" +\n                            response.text,\n                        showMessage: true,\n                        categoryMessage: \"negative\",\n                    });\n\n                    return [];\n                }\n            })\n            .then((json) => {\n                this.setState({\n                    posts: json,\n                    isloaded: true,\n                });\n            });\n    }\n\n    render() {\n        const postsList = this.state.posts.map((post) => {\n            return <Post key={post[\"id\"]} {...post} />;\n        });\n\n        return (\n            <>\n                <header>\n                    <Title>\n                        <h1>Blog Beaty</h1>\n                    </Title>\n                </header>\n\n                <Wrapper>\n                    <LeftPanel></LeftPanel>\n                    <div>\n                        <Loader isActive={!this.state.isloaded} />\n                        <Message\n                            showMessage={this.state.showMessage}\n                            category={this.state.categoryMessage}\n                            headerText={this.state.headerMessageText}\n                            text={this.state.messageText}\n                            color=\"red\"\n                            size=\"large\"\n                        />\n                        <ul className=\"post-list\">{postsList}</ul>\n                    </div>\n                </Wrapper>\n            </>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}