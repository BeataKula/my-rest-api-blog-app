{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/components/UserHeader.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHeader extends React.Component {\n  render() {\n    console.log(\"UserHeader\");\n    console.log(this.state);\n    console.log(this.props);\n\n    if (this.props.user !== undefined && this.props.user.userById !== undefined && this.props.user.userById.data !== undefined) {\n      const user = this.props.user.userById.data;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Problem z userem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  let user = null;\n  let postsReducer = state.postsReducer;\n  let usersReducer = state.usersReducer;\n  console.log(\"mapStateToProps\");\n  console.log(state);\n  console.log(props);\n\n  function checkId(user) {\n    if (user.userById.data.id === props.userId) {\n      return user;\n    }\n  }\n\n  if (state.usersReducer !== undefined) {\n    user = state.usersReducer.find(checkId);\n  }\n\n  return {\n    user,\n    postsReducer,\n    usersReducer\n  };\n};\n\nexport default connect(mapStateToProps)(UserHeader);","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/components/UserHeader.tsx"],"names":["React","connect","UserHeader","Component","render","console","log","state","props","user","undefined","userById","data","name","mapStateToProps","postsReducer","usersReducer","checkId","id","userId","find"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAQA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAA8C;AAC1CC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;;AACA,QACI,KAAKA,KAAL,CAAWC,IAAX,KAAoBC,SAApB,IACA,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,QAAhB,KAA6BD,SAD7B,IAEA,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,QAAhB,CAAyBC,IAAzB,KAAkCF,SAHtC,EAIE;AACE,YAAMD,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBE,QAAhB,CAAyBC,IAAtC;AACA,0BAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBH,IAAI,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAPD,MAOO;AACH,0BAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAfyC;;AAkB9C,MAAMC,eAAe,GAAG,CACpBP,KADoB,EAKpBC,KALoB,KAWnB;AACD,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIM,YAAY,GAAGR,KAAK,CAACQ,YAAzB;AACA,MAAIC,YAAY,GAAGT,KAAK,CAACS,YAAzB;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AAEA,WAASS,OAAT,CAAiBR,IAAjB,EAAuD;AACnD,QAAIA,IAAI,CAACE,QAAL,CAAcC,IAAd,CAAmBM,EAAnB,KAA0BV,KAAK,CAACW,MAApC,EAA4C;AACxC,aAAOV,IAAP;AACH;AACJ;;AAED,MAAIF,KAAK,CAACS,YAAN,KAAuBN,SAA3B,EAAsC;AAClCD,IAAAA,IAAI,GAAGF,KAAK,CAACS,YAAN,CAAmBI,IAAnB,CAAwBH,OAAxB,CAAP;AACH;;AACD,SAAO;AAAER,IAAAA,IAAF;AAAQM,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAP;AACH,CA9BD;;AAgCA,eAAef,OAAO,CAACa,eAAD,CAAP,CAAyBZ,UAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    PostState,\n    UserByIdResponce,\n    UserHeaderType,\n    UserState,\n} from \"../AppTypes\";\n\nclass UserHeader extends React.Component<any> {\n    render() {\n        console.log(\"UserHeader\");\n        console.log(this.state);\n        console.log(this.props);\n        if (\n            this.props.user !== undefined &&\n            this.props.user.userById !== undefined &&\n            this.props.user.userById.data !== undefined\n        ) {\n            const user = this.props.user.userById.data;\n            return <div className=\"header\">{user.name}</div>;\n        } else {\n            return <div className=\"header\">Problem z userem!</div>;\n        }\n    }\n}\n\nconst mapStateToProps = (\n    state: {\n        postsReducer: PostState;\n        usersReducer: [];\n    },\n    props: {\n        userId: number;\n        user: {\n            userById: UserByIdResponce;\n        };\n    }\n) => {\n    let user = null;\n    let postsReducer = state.postsReducer;\n    let usersReducer = state.usersReducer;\n\n    console.log(\"mapStateToProps\");\n    console.log(state);\n    console.log(props);\n\n    function checkId(user: { userById: UserByIdResponce }) {\n        if (user.userById.data.id === props.userId) {\n            return user;\n        }\n    }\n\n    if (state.usersReducer !== undefined) {\n        user = state.usersReducer.find(checkId);\n    }\n    return { user, postsReducer, usersReducer };\n};\n\nexport default connect(mapStateToProps)(UserHeader);\n"]},"metadata":{},"sourceType":"module"}