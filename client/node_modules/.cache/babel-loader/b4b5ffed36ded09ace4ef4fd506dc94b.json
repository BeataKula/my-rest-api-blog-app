{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/components/UserHeader.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { UserByIdResponce } from \"../AppTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHeader extends React.Component {\n  render() {\n    const {\n      user\n    } = this.props;\n\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Problem z userem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let user = null;\n  console.log(\"src/components/UserHeader.js/mapStateToProps/state\");\n  console.log(state);\n  console.log(ownProps);\n  const userById = {\n    isLoading: false,\n    error: false,\n    data: []\n  };\n\n  if (state.usersReducer !== undefined) {\n    console.log(state.usersReducer);\n    user = state.usersReducer.userById.data;\n    userById = {\n      isLoading: state.usersReducer.userById.isLoading,\n      error: state.usersReducer.userById.error,\n      data: []\n    }; // user = state.usersReducer.userById.data.find(\n    //     (user) => user.id === ownProps.userId\n    // );\n  }\n\n  return userById;\n};\n\nexport default connect(mapStateToProps)(UserHeader);","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/components/UserHeader.js"],"names":["React","connect","UserByIdResponce","UserHeader","Component","render","user","props","name","mapStateToProps","state","ownProps","console","log","userById","isLoading","error","data","usersReducer","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,aAAjC;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;;AACA,QAAI,CAACD,IAAL,EAAW;AACP,0BAAO;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBAAO;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBA,IAAI,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAPoC;;AAUzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,MAAIL,IAAI,GAAG,IAAX;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,QAAQ,GAAG;AACbC,IAAAA,SAAS,EAAE,KADE;AAEbC,IAAAA,KAAK,EAAE,KAFM;AAGbC,IAAAA,IAAI,EAAE;AAHO,GAAjB;;AAMA,MAAIP,KAAK,CAACQ,YAAN,KAAuBC,SAA3B,EAAsC;AAClCP,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACQ,YAAlB;AACAZ,IAAAA,IAAI,GAAGI,KAAK,CAACQ,YAAN,CAAmBJ,QAAnB,CAA4BG,IAAnC;AAEAH,IAAAA,QAAQ,GAAG;AACPC,MAAAA,SAAS,EAAEL,KAAK,CAACQ,YAAN,CAAmBJ,QAAnB,CAA4BC,SADhC;AAEPC,MAAAA,KAAK,EAAEN,KAAK,CAACQ,YAAN,CAAmBJ,QAAnB,CAA4BE,KAF5B;AAGPC,MAAAA,IAAI,EAAE;AAHC,KAAX,CAJkC,CAUlC;AACA;AACA;AACH;;AACD,SAAOH,QAAP;AACH,CA3BD;;AA6BA,eAAeb,OAAO,CAACQ,eAAD,CAAP,CAAyBN,UAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { UserByIdResponce } from \"../AppTypes\";\n\nclass UserHeader extends React.Component {\n    render() {\n        const { user } = this.props;\n        if (!user) {\n            return <div className=\"header\">Problem z userem!</div>;\n        }\n        return <div className=\"header\">{user.name}</div>;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    let user = null;\n\n    console.log(\"src/components/UserHeader.js/mapStateToProps/state\");\n    console.log(state);\n    console.log(ownProps);\n    const userById = {\n        isLoading: false,\n        error: false,\n        data: [],\n    };\n\n    if (state.usersReducer !== undefined) {\n        console.log(state.usersReducer);\n        user = state.usersReducer.userById.data;\n\n        userById = {\n            isLoading: state.usersReducer.userById.isLoading,\n            error: state.usersReducer.userById.error,\n            data: [],\n        };\n\n        // user = state.usersReducer.userById.data.find(\n        //     (user) => user.id === ownProps.userId\n        // );\n    }\n    return userById;\n};\n\nexport default connect(mapStateToProps)(UserHeader);\n"]},"metadata":{},"sourceType":"module"}