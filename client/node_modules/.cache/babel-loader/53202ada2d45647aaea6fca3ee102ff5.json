{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx\";\n\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPosts } from \"../actions\";\nimport Post from \"../components/Post\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n_c = PostsListStyle;\n\nclass PostsListPage extends React.Component {\n  /* state = {\n      isloaded: false,\n      isError: false,\n      headerMessageText: \"\",\n      messageText: \"\",\n      showMessage: false,\n      categoryMessage: \"info\" as categoryType,\n  };*/\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.postsReducer.allList);\n    console.log(this.props.postsReducer.allList.error);\n    /*\n    if (this.props.postsReducer.allList.error && !this.state.isloaded) {\n        this.setState({\n            isloaded: true,\n            isError: true,\n            headerMessageText: \"We're sorry we can't show you Blog!\",\n            messageText:\n                \"An error occurred while loading data: \" +\n                this.props.postsReducer.allList.data.text,\n            showMessage: true,\n            categoryMessage: \"negative\",\n        });\n    } else {\n        if (\n            this.props.postsReducer.allList.data.status === 200 &&\n            !this.state.isloaded\n        ) {\n            this.setState({\n                isloaded: true,\n            });\n        }\n    }*/\n  }\n\n  renderList() {\n    if (!this.props.postsReducer.allList.data.posts) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    const ListOfPosts = this.props.postsReducer.allList.data.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, { ...post\n      }, post[\"id\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PostsListStyle, {\n        children: ListOfPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    /*\n    return (\n        <>\n            <Loader isActive={!this.state.isloaded} />\n             <div className=\"ui relaxed divided list\">\n                <Message\n                    showMessage={this.state.showMessage}\n                    category={this.state.categoryMessage}\n                    headerText={this.state.headerMessageText}\n                    text={this.state.messageText}\n                    color=\"red\"\n                    size=\"large\"\n                />\n                {this.renderList()}\n            </div>\n        </>\n    );*/\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostsListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsListStyle\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx"],"names":["React","connect","styled","fetchPosts","Post","PostsListStyle","ul","PostsListPage","Component","componentDidMount","props","componentDidUpdate","console","log","postsReducer","allList","error","renderList","data","posts","ListOfPosts","map","post","render","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAOA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAIA,OAAO,MAAMC,cAAc,GAAGH,MAAM,CAACI,EAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;KAAMD,c;;AAUb,MAAME,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA+D;AAC3D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEIC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWP,UAAX;AACH;;AAEDQ,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,YAAX,CAAwBC,OAApC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,YAAX,CAAwBC,OAAxB,CAAgCC,KAA5C;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAI,CAAC,KAAKP,KAAL,CAAWI,YAAX,CAAwBC,OAAxB,CAAgCG,IAAhC,CAAqCC,KAA1C,EAAiD;AAC7C,0BAAO,qCAAP;AACH;;AAED,UAAMC,WAAW,GAAG,KAAKV,KAAL,CAAWI,YAAX,CAAwBC,OAAxB,CAAgCG,IAAhC,CAAqCC,KAArC,CAA2CE,GAA3C,CACfC,IAAD,IAAiB;AACb,0BAAO,QAAC,IAAD,OAA2BA;AAA3B,SAAWA,IAAI,CAAC,IAAD,CAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHe,CAApB;AAMA,wBACI;AAAA,6BACI,QAAC,cAAD;AAAA,kBAAiBF;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBAAO,qCAAP;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AAhF0D;;AAmF/D,MAAMC,eAAe,GAAIC,KAAD,IAA0C;AAC9D,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAexB,OAAO,CAACuB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAyCI,aAAzC,CAAf","sourcesContent":["/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { fetchPosts } from \"../actions\";\nimport {\n    IPost,\n    PostsListPageType,\n    categoryType,\n    PostPayload,\n} from \"../AppTypes\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n\nclass PostsListPage extends React.Component<PostsListPageType> {\n    /* state = {\n        isloaded: false,\n        isError: false,\n        headerMessageText: \"\",\n        messageText: \"\",\n        showMessage: false,\n        categoryMessage: \"info\" as categoryType,\n    };*/\n\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    componentDidUpdate() {\n        console.log(this.props.postsReducer.allList);\n        console.log(this.props.postsReducer.allList.error);\n\n        /*\n        if (this.props.postsReducer.allList.error && !this.state.isloaded) {\n            this.setState({\n                isloaded: true,\n                isError: true,\n                headerMessageText: \"We're sorry we can't show you Blog!\",\n                messageText:\n                    \"An error occurred while loading data: \" +\n                    this.props.postsReducer.allList.data.text,\n                showMessage: true,\n                categoryMessage: \"negative\",\n            });\n        } else {\n            if (\n                this.props.postsReducer.allList.data.status === 200 &&\n                !this.state.isloaded\n            ) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }*/\n    }\n\n    renderList() {\n        if (!this.props.postsReducer.allList.data.posts) {\n            return <></>;\n        }\n\n        const ListOfPosts = this.props.postsReducer.allList.data.posts.map(\n            (post: IPost) => {\n                return <Post key={post[\"id\"]} {...post} />;\n            }\n        );\n\n        return (\n            <>\n                <PostsListStyle>{ListOfPosts}</PostsListStyle>\n            </>\n        );\n    }\n\n    render() {\n        return <></>;\n        /*\n        return (\n            <>\n                <Loader isActive={!this.state.isloaded} />\n\n                <div className=\"ui relaxed divided list\">\n                    <Message\n                        showMessage={this.state.showMessage}\n                        category={this.state.categoryMessage}\n                        headerText={this.state.headerMessageText}\n                        text={this.state.messageText}\n                        color=\"red\"\n                        size=\"large\"\n                    />\n                    {this.renderList()}\n                </div>\n            </>\n        );*/\n    }\n}\n\nconst mapStateToProps = (state: { postsReducer: PostPayload }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsListPage);\n"]},"metadata":{},"sourceType":"module"}