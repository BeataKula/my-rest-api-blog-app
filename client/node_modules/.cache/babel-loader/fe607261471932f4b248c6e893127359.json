{"ast":null,"code":"import React, { Component } from \"react\";\nimport { fetchPosts } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostsListPage extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      isloaded: false,\n      isError: false,\n      headerMessageText: \"\",\n      messageText: \"\",\n      showMessage: false,\n      categoryMessage: \"info\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n    /*\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        .then((response) => {\n            if (response.status === 200) {\n                return response.json();\n            } else {\n                this.setState({\n                    posts: [],\n                    isloaded: false,\n                    isError: true,\n                    headerMessageText:\n                        \"We're sorry we can't show you Blog!\",\n                    messageText:\n                        \"An error occurred while loading data: <br/>\" +\n                        response.text,\n                    showMessage: true,\n                    categoryMessage: \"negative\",\n                });\n                 return [];\n            }\n        })\n        .then((json) => {\n            this.setState({\n                posts: json,\n                isloaded: true,\n            });\n        });\n         */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Blog\"\n    }, void 0, false);\n    /*\n    const PostsList = this.state.posts.map((post) => {\n        return <Post key={post[\"id\"]} {...post} />;\n    });\n     return (\n        <>\n            <Loader isActive={!this.state.isloaded} />\n            <Message\n                showMessage={this.state.showMessage}\n                category={this.state.categoryMessage}\n                headerText={this.state.headerMessageText}\n                text={this.state.messageText}\n                color=\"red\"\n                size=\"large\"\n            />\n            <ul className=\"post-list\">{PostsList}</ul>\n        </>\n    );\n    */\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostsListPage);","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx"],"names":["React","Component","fetchPosts","connect","PostsListPage","state","posts","isloaded","isError","headerMessageText","messageText","showMessage","categoryMessage","componentDidMount","props","render","mapStateToProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAmBA,MAAMC,aAAN,SAA4BH,SAA5B,CAA8D;AAAA;AAAA;AAAA,SAC1DI,KAD0D,GAClD;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE,KAFN;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,iBAAiB,EAAE,EAJf;AAKJC,MAAAA,WAAW,EAAE,EALT;AAMJC,MAAAA,WAAW,EAAE,KANT;AAOJC,MAAAA,eAAe,EAAE;AAPb,KADkD;AAAA;;AAW1DC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWZ,UAAX;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA,qBAAP;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AAnEyD;;AAsE9D,MAAMC,eAAe,GAAIX,KAAD,IAA2B;AAC/C,SAAO;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAP;AACH,CAFD;;AAIA,eAAeH,OAAO,CAACa,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,aAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Loader from \"../components/Loader\";\nimport Message, { categoryType } from \"../components/Message\";\nimport Post from \"../components/Post\";\nimport { fetchPosts } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nexport type PostType = {\n    userId: number;\n    id: number;\n    title: string;\n    body: string;\n};\n\ntype PostsListPageState = {\n    posts: PostType[];\n    isloaded: boolean;\n    isError: boolean;\n    headerMessageText: String;\n    messageText: String;\n    showMessage: boolean;\n    categoryMessage: categoryType;\n};\n\nclass PostsListPage extends Component<{}, PostsListPageState> {\n    state = {\n        posts: [],\n        isloaded: false,\n        isError: false,\n        headerMessageText: \"\",\n        messageText: \"\",\n        showMessage: false,\n        categoryMessage: \"info\" as categoryType,\n    };\n\n    componentDidMount() {\n        this.props.fetchPosts();\n        /*\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\n            .then((response) => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    this.setState({\n                        posts: [],\n                        isloaded: false,\n                        isError: true,\n                        headerMessageText:\n                            \"We're sorry we can't show you Blog!\",\n                        messageText:\n                            \"An error occurred while loading data: <br/>\" +\n                            response.text,\n                        showMessage: true,\n                        categoryMessage: \"negative\",\n                    });\n\n                    return [];\n                }\n            })\n            .then((json) => {\n                this.setState({\n                    posts: json,\n                    isloaded: true,\n                });\n            });\n\n            */\n    }\n\n    render() {\n        return <>Blog</>;\n        /*\n        const PostsList = this.state.posts.map((post) => {\n            return <Post key={post[\"id\"]} {...post} />;\n        });\n\n        return (\n            <>\n                <Loader isActive={!this.state.isloaded} />\n                <Message\n                    showMessage={this.state.showMessage}\n                    category={this.state.categoryMessage}\n                    headerText={this.state.headerMessageText}\n                    text={this.state.messageText}\n                    color=\"red\"\n                    size=\"large\"\n                />\n                <ul className=\"post-list\">{PostsList}</ul>\n            </>\n        );\n        */\n    }\n}\n\nconst mapStateToProps = (state: { posts: any }) => {\n    return { posts: state.posts };\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsListPage);\n"]},"metadata":{},"sourceType":"module"}