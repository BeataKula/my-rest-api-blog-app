{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPosts } from \"../actions\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n_c = PostsListStyle;\n\nclass PostsListPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isloaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n\n    if (this.props.postsReducer.posts) {\n      console.log(\"Is loaded true\");\n      this.setState({\n        isloaded: true\n      });\n    } else {\n      console.log(\"Is loaded false\");\n    }\n  }\n\n  renderList() {\n    if (!this.props.postsReducer.posts) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else {\n      const ListOfPosts = this.props.postsReducer.posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, { ...post\n        }, post[\"id\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(PostsListStyle, {\n          children: ListOfPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        isActive: !this.state.isloaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostsListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsListStyle\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx"],"names":["React","connect","styled","fetchPosts","Post","Loader","PostsListStyle","ul","PostsListPage","Component","state","isloaded","componentDidMount","props","postsReducer","posts","console","log","setState","renderList","ListOfPosts","map","post","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,OAAO,MAAMC,cAAc,GAAGJ,MAAM,CAACK,EAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;KAAMD,c;;AAUb,MAAME,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA+D;AAAA;AAAA;AAAA,SAC3DC,KAD2D,GACnD;AACJC,MAAAA,QAAQ,EAAE;AADN,KADmD;AAAA;;AAK3DC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWV,UAAX;;AAEA,QAAI,KAAKU,KAAL,CAAWC,YAAX,CAAwBC,KAA5B,EAAmC;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAKC,QAAL,CAAc;AACVP,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH,KALD,MAKO;AACHK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ;;AAEDE,EAAAA,UAAU,GAAG;AACT,QAAI,CAAC,KAAKN,KAAL,CAAWC,YAAX,CAAwBC,KAA7B,EAAoC;AAChC,0BAAO,qCAAP;AACH,KAFD,MAEO;AACH,YAAMK,WAAW,GAAG,KAAKP,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,CAA8BM,GAA9B,CACfC,IAAD,IAAiB;AACb,4BAAO,QAAC,IAAD,OAA2BA;AAA3B,WAAWA,IAAI,CAAC,IAAD,CAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAHe,CAApB;AAMA,0BACI;AAAA,+BACI,QAAC,cAAD;AAAA,oBAAiBF;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAAC,KAAKb,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBACK,KAAKQ,UAAL;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAQH;;AA7C0D;;AAgD/D,MAAMK,eAAe,GAAId,KAAD,IAAwC;AAC5D,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAACuB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAyCK,aAAzC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { fetchPosts } from \"../actions\";\nimport { PostState, IPost, PostsListPageType } from \"../AppTypes\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\n\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n\nclass PostsListPage extends React.Component<PostsListPageType> {\n    state = {\n        isloaded: false,\n    };\n\n    componentDidMount() {\n        this.props.fetchPosts();\n\n        if (this.props.postsReducer.posts) {\n            console.log(\"Is loaded true\");\n            this.setState({\n                isloaded: true,\n            });\n        } else {\n            console.log(\"Is loaded false\");\n        }\n    }\n\n    renderList() {\n        if (!this.props.postsReducer.posts) {\n            return <></>;\n        } else {\n            const ListOfPosts = this.props.postsReducer.posts.map(\n                (post: IPost) => {\n                    return <Post key={post[\"id\"]} {...post} />;\n                }\n            );\n\n            return (\n                <>\n                    <PostsListStyle>{ListOfPosts}</PostsListStyle>\n                </>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Loader isActive={!this.state.isloaded} />\n                <div className=\"ui relaxed divided list\">\n                    {this.renderList()}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { postsReducer: PostState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsListPage);\n"]},"metadata":{},"sourceType":"module"}