{"ast":null,"code":"var _jsxFileName = \"/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx\";\n\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { fetchPosts } from \"../actions\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport User from \"../components/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n_c = PostsListStyle;\n\nclass PostsListPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      isloaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  componentDidUpdate() {\n    if (!this.props.postsReducer.allPostsList.error && !this.props.postsReducer.allPostsList.isLoading && this.props.postsReducer.allPostsList.data != null && !this.state.isloaded) {\n      this.setState({\n        posts: this.props.postsReducer.allPostsList.data.posts,\n        isloaded: true\n      });\n    } else {\n      if (this.props.postsReducer.allPostsList.error && !this.state.isloaded) {\n        this.setState({\n          isloaded: true\n        });\n      }\n    }\n  }\n\n  renderMessage() {\n    if (this.state.isloaded) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        showMessage: this.props.postsReducer.allPostsList.data.showMessage,\n        category: this.props.postsReducer.allPostsList.data.categoryMessage,\n        headerText: this.props.postsReducer.allPostsList.data.headerMessageText,\n        text: this.props.postsReducer.allPostsList.data.messageText,\n        color: \"red\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    if (this.state.posts === []) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    const ListOfPosts = this.state.posts.map(post => {\n      const userId = post[\"userId\"];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(User, {\n          userId: userId\n        }, `${post[\"id\"]}_${userId}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Post, { ...post\n        }, post[\"id\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PostsListStyle, {\n        children: ListOfPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        isActive: !this.state.isloaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui relaxed divided list\",\n        children: [this.renderMessage(), this.renderList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PostsListPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsListStyle\");","map":{"version":3,"sources":["/home/beatakula/workspace/react/my-blog-app/src/pages/PostsListPage.tsx"],"names":["React","connect","styled","fetchPosts","Post","Loader","Message","User","PostsListStyle","ul","PostsListPage","Component","state","posts","isloaded","componentDidMount","props","componentDidUpdate","postsReducer","allPostsList","error","isLoading","data","setState","renderMessage","showMessage","categoryMessage","headerMessageText","messageText","renderList","ListOfPosts","map","post","userId","render","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { fetchPosts } from \"../actions\";\nimport { IPost, PostsListPageType, PostState } from \"../AppTypes\";\nimport Post from \"../components/Post\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport User from \"../components/User\";\n\nexport const PostsListStyle = styled.ul`\n    padding: 15px;\n    padding-top: 0px;\n    list-style-type: none;\n    z-index: 10;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    grid-gap: 10px;\n`;\n\nclass PostsListPage extends React.Component<PostsListPageType> {\n    state = {\n        posts: [],\n        isloaded: false,\n    };\n\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    componentDidUpdate() {\n        if (\n            !this.props.postsReducer.allPostsList.error &&\n            !this.props.postsReducer.allPostsList.isLoading &&\n            this.props.postsReducer.allPostsList.data != null &&\n            !this.state.isloaded\n        ) {\n            this.setState({\n                posts: this.props.postsReducer.allPostsList.data.posts,\n                isloaded: true,\n            });\n        } else {\n            if (\n                this.props.postsReducer.allPostsList.error &&\n                !this.state.isloaded\n            ) {\n                this.setState({\n                    isloaded: true,\n                });\n            }\n        }\n    }\n\n    renderMessage() {\n        if (this.state.isloaded) {\n            return (\n                <Message\n                    showMessage={\n                        this.props.postsReducer.allPostsList.data.showMessage\n                    }\n                    category={\n                        this.props.postsReducer.allPostsList.data\n                            .categoryMessage\n                    }\n                    headerText={\n                        this.props.postsReducer.allPostsList.data\n                            .headerMessageText\n                    }\n                    text={this.props.postsReducer.allPostsList.data.messageText}\n                    color=\"red\"\n                    size=\"large\"\n                />\n            );\n        }\n    }\n\n    renderList() {\n        if (this.state.posts === []) {\n            return <></>;\n        }\n\n        const ListOfPosts = this.state.posts.map((post: IPost) => {\n            const userId: number = post[\"userId\"];\n\n            return (\n                <>\n                    <User key={`${post[\"id\"]}_${userId}`} userId={userId} />\n                    <Post key={post[\"id\"]} {...post} />\n                </>\n            );\n        });\n\n        return (\n            <>\n                <PostsListStyle>{ListOfPosts}</PostsListStyle>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <Loader isActive={!this.state.isloaded} />\n                <div className=\"ui relaxed divided list\">\n                    {this.renderMessage()}\n                    {this.renderList()}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state: { postsReducer: PostState }) => {\n    return state;\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(PostsListPage);\n"]},"metadata":{},"sourceType":"module"}